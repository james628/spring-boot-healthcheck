group "com.studio4365"
version "1.00"

apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'spring-boot'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = 1.8
targetCompatibility = 1.8

bootRepackage {
    enabled = false
}

buildscript {
	ext {
		springBootVersion = '1.2.6.RELEASE'
	}
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('commons-collections:commons-collections:3.2')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

archivesBaseName = "spring-boot-healthcheck"
jar {
    manifest {
        attributes 'Implementation-Title': archivesBaseName,
                   'Implementation-Version': version
    }
}

sourceSets {
	main {
		resources {
			srcDirs = ["src/main/resources"]
		}
	}
	test {
		resources {
			srcDirs = ["src/test/resources"]
		}
	}
}

/*
	task sourcesJar(type: Jar, dependsOn: classes) {
		classifier = "sources"
		from sourceSets.main.allSource
	}
	task javadocJar(type: Jar, dependsOn: javadoc) {
		classifier = "javadoc"
		from javadoc.destinationDir
	}
	artifacts {
		archives sourcesJar
		archives javadocJar
	}
	signing {
		sign configurations.archives
	}
	uploadArchives {
	    repositories {
			mavenDeployer {
	    		beforeDeployment {
	    			MavenDeployment deployment -> signing.signPom(deployment)
	    		}
	    		repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2")
	    		snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots")
	   			pom {
					project {
						inceptionYear '2016'
						licenses {
				          license {
				            name "The Apache License, Version 2.0"
				            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
				          }
				        }
						name "Spring boot healthcheck"
						packaging "jar"
						description "Generate REST API \"/healthcheck\" in your spring boot web project."
						url "https://github.com/james628/spring-boot-healthcheck"
						scm {
							connection "scm:git:https://github.com/james628/spring-boot-healthcheck.git"
							developerConnection "scm:git:https://github.com/james628/spring-boot-healthcheck.git"
							url "https://github.com/james628/spring-boot-healthcheck.git"
						}
				        developers {
				        	developer {
				        		id "james628"
				        		name "James Park"
				        		email "james1985@naver.com"
				        	}
				        }
				        parent {
				        	groupId "org.springframework.boot"
				        	artifactId "spring-boot-starter-parent"
				        	version "1.2.6.RELEASE"
				        }
					}
				}
	    	}
	    }
	}
*/